syntax = "proto3";

option go_package = "github.com/keshavbansal015/treebeard/api/shardnode";

package shardnode;

service ShardNode {
    rpc BatchQuery (RequestBatch) returns (ReplyBatch) {}
    rpc SendBlocks(SendBlocksRequest) returns (SendBlocksReply) {}
    rpc AckSentBlocks(AckSentBlocksRequest) returns (AckSentBlocksReply) {}
    rpc JoinRaftVoter (JoinRaftVoterRequest) returns (JoinRaftVoterReply) {}
}

message RequestBatch {
    repeated ReadRequest read_requests = 1;
    repeated WriteRequest write_requests = 2;
}

message ReplyBatch {
    repeated ReadReply read_replies = 1;
    repeated WriteReply write_replies = 2;
}

message ReadRequest {
    string request_id = 1;
    string block = 2;
}

message ReadReply {
    string request_id = 1;
    string value = 2;
}

message WriteRequest {
    string request_id = 1;
    string block = 2;
    string value = 3;
}

message WriteReply {
    string request_id = 1;
    bool success = 2;
}

message JoinRaftVoterRequest {
    int32 node_id = 1;
    string node_addr = 2;
}

message JoinRaftVoterReply {
    bool success = 1;
}

message SendBlocksRequest {
    int32 maxBlocks = 1;
    int32 storage_id = 3;
}

message Block {
    string block = 1;
    string value = 2;
    int32 path = 3;
}

message SendBlocksReply {
    repeated Block blocks = 1;
}

// it represents both acks and nacks
message Ack {
    string block = 1;
    bool is_ack = 2; // if flase: nack
}

message AckSentBlocksRequest {
    repeated Ack acks = 1;
}

message AckSentBlocksReply {
    bool success = 1;
}